{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/blog-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/blog.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"names":["ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","map","tag","i","key","slug","a","as","Link","to","replaceSlashes","name","Blog","posts","title","sx","alignItems","justifyContent","flexFlow","h2","variant","mt","BlogComponent","props","allPost","data","nodes","BlogListItem","post","showTags","mb","fontSize","color","date","Listing","className"],"mappings":"2FAAA,yEA8BeA,IAjBE,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,KAClB,EAA+BC,cAAvBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAElB,OACE,kBAAC,IAAMC,SAAP,KACGJ,EAAKK,KAAI,SAACC,EAAKC,GAAN,OACR,kBAAC,IAAMH,SAAP,CAAgBI,IAAKF,EAAIG,QACpBF,GAAF,KACD,kBAAC,IAAOG,EAAR,CAAUC,GAAIC,OAAMC,GAAIC,YAAe,IAAIX,EAAL,IAAiBD,EAAjB,IAA6BI,EAAIG,OACpEH,EAAIS,a,8KCoBFC,EAjBF,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,MACd,EAA+BhB,cAAvBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAElB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKe,MAAM,SACX,YAAC,IAAD,CAAMC,GAAI,CAAEC,WAAY,SAAUC,eAAgB,gBAAiBC,SAAU,SAC3E,YAAC,IAAOC,GAAR,aACA,YAAC,IAAOb,EAAR,CAAUC,GAAIC,OAAMO,GAAI,CAAEK,QAAS,mBAAqBX,GAAIC,YAAe,IAAIX,EAAL,IAAiBD,IAA3F,kBAIF,YAAC,IAAD,CAASe,MAAOA,EAAOE,GAAI,CAAEM,GAAI,CAAC,EAAG,QClC5BC,UCQA,YAAkD,IAAhBC,EAAgB,oBAErDC,EACND,EADFE,KAAQD,QAGV,OAAO,kBAAC,EAAD,eAAMX,MAAOW,EAAQE,OAAWH,M,uHCwB1BI,EAjBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASC,gBAAT,gBACnB,YAAC,IAAD,CAAKC,GAAI,GACP,YAAC,IAAOxB,EAAR,CAAUC,GAAIC,OAAMC,GAAImB,EAAKvB,KAAMU,GAAI,CAAEgB,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAO,SAClEJ,EAAKd,OAER,iBAAGC,GAAI,CAAEiB,MAAO,YAAaX,GAAI,EAAGf,EAAG,CAAE0B,MAAO,aAAeD,SAAU,CAAC,EAAG,EAAG,KAC9E,wBAAOH,EAAKK,MACXL,EAAKhC,MAAQiC,GACZ,YAAC,IAAM7B,SAAP,WAEE,YAAC,IAAD,CAAUJ,KAAMgC,EAAKhC,WCJhBsC,IARC,SAAC,GAAD,IAAGrB,EAAH,EAAGA,MAAOsB,EAAV,EAAUA,UAAV,IAAqBN,gBAArB,gBACd,uBAASd,GAAI,CAAEe,GAAI,CAAC,EAAG,EAAG,IAAMK,UAAWA,GACxCtB,EAAMZ,KAAI,SAAC2B,GAAD,OACT,YAAC,EAAD,CAAcxB,IAAKwB,EAAKvB,KAAMuB,KAAMA,EAAMC,SAAUA","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-blog-query-tsx-f8b0ef596d60c434ca71.js","sourcesContent":["import React from \"react\"\nimport { Styled } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Styled.a as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Styled.a>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport { jsx, Styled } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport { Flex } from \"@theme-ui/components\"\nimport Layout from \"./layout\"\nimport Listing from \"./listing\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport SEO from \"./seo\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Blog = ({ posts }: PostsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Styled.h2>Blog</Styled.h2>\n        <Styled.a as={Link} sx={{ variant: `links.secondary` }} to={replaceSlashes(`/${basePath}/${tagsPath}`)}>\n          View all tags\n        </Styled.a>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Blog\n","import { graphql } from \"gatsby\"\nimport BlogComponent from \"../components/blog\"\n\nexport default BlogComponent\n\nexport const query = graphql`\n  query($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Blog from \"../../../components/blog\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreBlog({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Blog posts={allPost.nodes} {...props} />\n}\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, Styled } from \"theme-ui\"\nimport { Box } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Styled.a as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </Styled.a>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"sourceRoot":""}