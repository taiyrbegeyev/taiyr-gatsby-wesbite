{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/tag.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/tag-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/tag.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/layout.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"names":["Tag","posts","pageContext","useMinimalBlogConfig","tagsPath","basePath","title","name","sx","alignItems","justifyContent","flexFlow","h2","a","as","Link","variant","to","replaceSlashes","mt","query","TagComponent","data","allPost","nodes","ItemTags","tags","Fragment","map","tag","i","key","slug","Layout","children","className","root","data-testid","styles","css","boxSizing","body","margin","padding","textRendering","backgroundColor","color","transition","li","p","h3","h4","id","CodeStyles","BlogListItem","post","showTags","mb","fontSize","date","Listing"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx-b28740329bf099ea300e.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Styled } from \"theme-ui\"\nimport { Flex } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport Listing from \"./listing\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport SEO from \"./seo\"\n\ntype TagProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead: number\n    tags: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n}\n\nconst Tag = ({ posts, pageContext }: TagProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <SEO title={`Tag: ${pageContext.name}`} />\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Styled.h2>{pageContext.name}</Styled.h2>\n        <Styled.a as={Link} sx={{ variant: `links.secondary` }} to={replaceSlashes(`/${basePath}/${tagsPath}`)}>\n          View all tags\n        </Styled.a>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Tag\n","import { graphql } from \"gatsby\"\nimport TagComponent from \"../components/tag\"\n\nexport default TagComponent\n\nexport const query = graphql`\n  query($slug: String!, $formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, filter: { tags: { elemMatch: { slug: { eq: $slug } } } }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Tag from \"../../../components/tag\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: any\n  }\n  pageContext: any\n}\n\nexport default ({ data, pageContext }: Props) => {\n  const { allPost } = data\n\n  return <Tag posts={allPost.nodes} pageContext={pageContext} />\n}\n","import React from \"react\"\nimport { Styled } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Styled.a as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Styled.a>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import React from \"react\"\nimport { Global } from \"@emotion/core\"\nimport { Main, Styled, Container, css } from \"theme-ui\"\nimport \"typeface-ibm-plex-sans\"\nimport SEO from \"./seo\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport CodeStyles from \"../styles/code\"\nimport SkipNavLink from \"./skip-nav\"\n\ntype LayoutProps = { children: React.ReactNode; className?: string }\n\nconst Layout = ({ children, className }: LayoutProps) => (\n  <Styled.root data-testid=\"theme-root\">\n    <Global\n      styles={css({\n        \"*\": {\n          boxSizing: `inherit`,\n        },\n        body: {\n          margin: 0,\n          padding: 0,\n          boxSizing: `border-box`,\n          textRendering: `optimizeLegibility`,\n        },\n        \"::selection\": {\n          backgroundColor: `primary`,\n          color: `white`,\n        },\n        a: {\n          transition: `all 0.3s ease-in-out`,\n          color: `text`,\n        },\n        li: {\n          transition: `all 0.3s ease-in-out`,\n          color: `text`,\n        },\n        p: {\n          transition: `all 0.3s ease-in-out`,\n          color: `text`,\n        },\n        h2: {\n          transition: `all 0.3s ease-in-out`,\n          color: `text`,\n        },\n        h3: {\n          transition: `all 0.3s ease-in-out`,\n          color: `text`,\n        },\n        h4: {\n          transition: `all 0.3s ease-in-out`,\n          color: `text`,\n        },\n      })}\n    />\n    <SEO />\n    <SkipNavLink>Skip to content</SkipNavLink>\n    <Container>\n      <Header />\n      <Main id=\"skip-nav\" css={css({ ...CodeStyles })} className={className}>\n        {children}\n      </Main>\n      <Footer />\n    </Container>\n  </Styled.root>\n)\n\nexport default Layout\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, Styled } from \"theme-ui\"\nimport { Box } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Styled.a as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </Styled.a>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"sourceRoot":""}