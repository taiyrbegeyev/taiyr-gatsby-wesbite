{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack:///./static/Taiyr_Begeyev_CV_EU.pdf","webpack:///./src/components/downloadButton.module.css","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/list.tsx","webpack:///./src/components/downloadButton.jsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"names":["ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","map","tag","i","key","slug","a","as","Link","to","replaceSlashes","name","module","exports","Text","props","console","warn","layoutProps","_frontmatter","MDXContent","components","mdxType","sx","fontSize","fontWeight","color","isMDXComponent","Title","makeShortcode","text","parentName","href","target","List","children","mb","ul","margin","padding","li","listStyle","variant","DownloadButton","content","blog","className","buttonStyles","button2","button","Homepage","posts","blogPath","root","data-testid","styles","css","boxSizing","body","textRendering","backgroundColor","transition","id","CodeStyles","p","mt","cvFile","showTags","query","HomepageComponent","allPost","data","nodes","BlogListItem","post","title","date","Listing"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-2d7d8cde9237ee6e0cd1.js","sourcesContent":["import React from \"react\"\nimport { Styled } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Styled.a as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Styled.a>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","module.exports = __webpack_public_path__ + \"static/Taiyr_Begeyev_CV_EU-21ab276128b9cca3b109996c7249493d.pdf\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"downloadButton-module--content--2-5dX\",\"button\":\"downloadButton-module--button--2U5Sq\",\"button2\":\"downloadButton-module--button2--1SQxG\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Text = makeShortcode(\"Text\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Text sx={{\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`\n    }} mdxType=\"Text\">\n  Hello, world!\n    </Text>\n    <p>{`Taiyr is over here. I am a 19-year-old Full Stack Developer and a code enthusiast. In other words, just a simple dude who wants to build cool stuff. I constantly try to run Dijkstra's algorithm on my path to become a better developer.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport { jsx, Styled } from \"theme-ui\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Title = makeShortcode(\"Title\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Title text=\"Projects\" mdxType=\"Title\" />\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><a href=\"https://github.com/taiyrbegeyev/identifia\" target=\"_blank\">{`Identifia ðŸ”—`}</a></strong><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Identify Student's Residential College by Scanning the campus card's barcode number.`}<blockquote parentName=\"li\">\n              <p parentName=\"blockquote\">{`Flutter, Dart`}</p>\n            </blockquote></li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><a href=\"https://github.com/taiyrbegeyev/JStore\" target=\"_blank\">{`JStore ðŸ”—`}</a></strong><ul parentName=\"li\">\n          <li parentName=\"ul\">{`The marketplace for Jacobs University Bremen, which is used by more than 1000 students. Hundreds of items have been successfully sold. The app offers passwordless authentication to improve security. It takes less than 5 seconds to contact the owner. Our own templates simplify life. Post and edit your own posts, mark as sold or delete them. Search/sort items bykeywords or categories.`}<blockquote parentName=\"li\">\n              <p parentName=\"blockquote\">{`ReactJS, NodeJS, Firebase, Whatâ€™s App API`}</p>\n            </blockquote></li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><a href=\"https://github.com/taiyrbegeyev/trump_genius_bot\" target=\"_blank\">{`Trump Bot ðŸ”—`}</a></strong><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Telegram Bot that can search for the dumbest things Donald Trump has ever said by keyword. If you want some diversity, random quote and meme options are available.`}<blockquote parentName=\"li\">\n              <p parentName=\"blockquote\">{`Express.js, REST API, Telegram API`}</p>\n            </blockquote></li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><a href=\"https://github.com/taiyrbegeyev/weather-app\" target=\"_blank\">{`Weather Application ðŸ”—`}</a></strong><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Weather App that fetches API from openweathermap. User is asked to input a city and a country he or she wants to get information about. The temperature, humidity and conditions are displayed to the user.`}<blockquote parentName=\"li\">\n              <p parentName=\"blockquote\">{`ReactJS, Bootstrap, REST API`}</p>\n            </blockquote></li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><a href=\"https://github.com/techclubjacobs\" target=\"_blank\">{`Campus Life ðŸ”—`}</a></strong><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Work on the front-end and back-end of the unified Campus Website : Campus Life and Campus People.`}<blockquote parentName=\"li\">\n              <p parentName=\"blockquote\">{`Express.js, Typescript, mySQL`}</p>\n            </blockquote></li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><a href=\"https://github.com/taiyrbegeyev/Browser-Control\" target=\"_blank\">{`Browser Control ðŸ”—`}</a></strong><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Arduino project that deals with controlling a web browser using hand gestures. It uses ultrasonic sensors to detect the motion of the hand and utilise Arduino and Python to manage a web browser. It allows hand gestures to carry out certain functions on a web browser such as scrolling up and down or switching to different tabs open in a window.`}<blockquote parentName=\"li\">\n              <p parentName=\"blockquote\">{`C++, Python`}</p>\n            </blockquote></li>\n        </ul></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3 },\n      a: { variant: `links.listItem` },\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","import React from 'react'\nimport buttonStyles from \"./downloadButton.module.css\"\n\nconst DownloadButton = ({ content, href, blog = false }) => {\n  if (blog) {\n    return (\n      <a href={href} target=\"_blank\" className={buttonStyles.button2}>{content}</a>\n    )\n  } else {\n    return (\n      <a href={href} target=\"_blank\" className={buttonStyles.button}>{content}</a>\n    )\n  }\n}\n\nexport default DownloadButton\n","/** @jsx jsx */\nimport { Global } from \"@emotion/core\"\nimport { jsx, Main, Styled, Container, css } from \"theme-ui\"\n// @ts-ignore\nimport buttonStyles from \"../../../components/downloadButton.module.css\"\nimport \"typeface-ibm-plex-sans\"\nimport { Link } from \"gatsby\"\n// @ts-ignore\nimport Hero from \"../texts/hero\"\n// @ts-ignore\nimport Bottom from \"../texts/bottom\"\n// @ts-ignore\nimport Title from \"./title\"\nimport List from './list'\nimport Listing from \"./listing\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport SEO from \"./seo\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport DownloadButton from '../../../components/downloadButton'\nimport CodeStyles from \"../styles/code\"\nimport SkipNavLink from \"./skip-nav\"\nimport Intro from \"../../../components/intro\"\n// @ts-ignore\nimport cvFile from \"../../../../static/Taiyr_Begeyev_CV_EU.pdf\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n\n  return (\n    <Styled.root data-testid=\"theme-root\">\n      <Global\n        styles={css({\n          \"*\": {\n            boxSizing: `inherit`,\n          },\n          body: {\n            margin: 0,\n            padding: 0,\n            boxSizing: `border-box`,\n            textRendering: `optimizeLegibility`,\n          },\n          \"::selection\": {\n            backgroundColor: `primary`,\n            color: `white`,\n          },\n          a: {\n            transition: `all 0.3s ease-in-out`,\n            color: `text`,\n          },\n        })}\n      />\n      <SEO />\n      <SkipNavLink>Skip to content</SkipNavLink>\n      <Container id=\"home\">\n        <Header />\n        <Main id=\"skip-nav\" css={css({ ...CodeStyles })}>\n          <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 } }}>\n            <Hero />\n            <div className={buttonStyles.content}>\n              <DownloadButton href={cvFile} content='Download CV' />\n              {/* <DownloadButton blog content='Check Out Blog' /> */}\n            </div>\n          </section>\n          <Title text=\"Latest Posts\">\n            <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n          </Title>\n          <Listing posts={posts} showTags={false} />\n          <List>\n            <Bottom />\n          </List>\n        </Main>\n        <Footer />\n      </Container>\n    </Styled.root>\n  )\n}\n\nexport default Homepage\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n}\n\nexport default ({ data }: Props) => {\n  const { allPost } = data\n\n  return <Homepage posts={allPost.nodes} />\n}\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, Styled } from \"theme-ui\"\nimport { Box } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Styled.a as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </Styled.a>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"sourceRoot":""}